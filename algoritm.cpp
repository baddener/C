#include "zagolovok.h" // подключили файл заголовка со всеми библиотеками.
/////////////////////////////////////////////////////////////////////////////////////////////////
void swap(int &a, int &b)// функци€ ,котока€ мен€ет местами значени€ аргументов в скобках
{
	int c=a;// в данном случае аргументы a и b помен€ютс€ местами в результате выполенеи€ этой функции.
	a=b;
	b=c;
}
//////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void algoritm(int *p, int size)// функци€ ,реализующа€ алгоритм нахождени€ одной перестоновки из другой
{
int v,n,i,j;// заводим переменные
for (i= size-1;i>0; i--)// идем по массиву, который мы завели в функции main с конца
{
if (p[i]>p[i-1])//условие ,при котором сравниваитс€ первый элемент с конца и следующий за ним(тоже с конца)  
{               //находим i-тый элемент (в нашей перестановке -это 5)   
n=p[i];// переменной n присваеваем значение элемента ,который удовлетвор€ет условию
for (j=i; j<size; j++)//идем по части массва ,котора€ начинаетс€ с i- того элемента
{
if (p[j]>=p[i-1] && n >=p[j])// условие ,в котором находим j-тый элемент ( в нашей перестановке - это 7)
{
			n=p[j];
			v=j;
}
}
			swap(p[v], p[i-1]);// переставл€ем ,найденные нами элементы ,т.е. 5 и 7
			v= i;
break;
}
}
//теперь мы имеем пересатновку : 1,4,6,2,9,7,8,5,3
for (i = v; i < size - 1; i++)// при помощи данного цикла мы рассматриваем часть массива,котора€ начинаетс€ с i-того элемента.
                              // затем выстраиваем эту часть массива по возрастанию с помощью цикала и условий ниже.
{
if (p[i]>p[i+1]) 
{
swap(p[i], p[i+1]);
}
}
for (i=v; i<size-1; i++)
{
if (p[i]>p[i+1]) { 
  swap(p[i],p[i+1]); }
}
}
///////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////
int main()// в данной функции мы завели массив p и работаем с ним в качестве перестановки 
          // далее выводим первую перестановку и последущие 
{
int p[10] = { 1,4,6,2,9,5,8,7,3 };
int i,j;
for (i=0; i<9; i++)
{
		printf("| %d|", p[i]);
}
	algoritm(p, 9);
	printf("\n");
for (i=0; i<9; i++)
{
		printf("| %d|", p[i]);
}
for (i=0; i<9; i++)
{
		algoritm(p,9);
		printf("\n");
for (i=0; i<9; i++)
{
			
			printf("|% d|", p[i]);
}

}

	algoritm(p, 9);
	printf("\n");
for (i=0; i<9; i++)
{
		printf("| %d|", p[i]);
}
for (i=0; i<9; i++)
{
		algoritm(p,9);
		printf("\n");
for (i=0; i<9; i++)
{
			
			printf("|% d|", p[i]);
}

return 0;	
}
}
